
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.filechooser.FileNameExtensionFilter;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author User
 */
public class GeschwindigkeitsmessungGui extends javax.swing.JFrame
{

    /**
     * Creates new form GeschwindigkeitsmessungGui
     */
    public GeschwindigkeitsmessungGui()
    {
        initComponents();
        taTable.setModel(bl);
        taTable.setDefaultRenderer(Object.class, new TableCellRenderer());
     
        
        taTable.getTableHeader().addMouseListener(new MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
                if (SwingUtilities.isRightMouseButton(e)) {
                    jPopupMenu1.show(taTable.getTableHeader(), e.getX(), e.getY());
                }
            }

            @Override
            public void mousePressed(MouseEvent e) {

            }

            @Override
            public void mouseReleased(MouseEvent e) {
            }

            @Override
            public void mouseEntered(MouseEvent e) {
            }

            @Override
            public void mouseExited(MouseEvent e) {
            }
});
    }

    private MyTabelModel bl = new MyTabelModel();
 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        miAdd = new javax.swing.JMenuItem();
        miDel = new javax.swing.JMenuItem();
        miAvg = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        taTable = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        muData = new javax.swing.JMenu();
        miSave = new javax.swing.JMenuItem();
        miLoad = new javax.swing.JMenuItem();

        miAdd.setText("Hinzufügen");
        miAdd.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                miAddActionPerformed(evt);
            }
        });
        jPopupMenu1.add(miAdd);

        miDel.setText("Löschen");
        miDel.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                miDelActionPerformed(evt);
            }
        });
        jPopupMenu1.add(miDel);

        miAvg.setText("Durchschnitt");
        miAvg.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                miAvgActionPerformed(evt);
            }
        });
        jPopupMenu1.add(miAvg);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        taTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String []
            {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        taTable.setComponentPopupMenu(jPopupMenu1);
        jScrollPane1.setViewportView(taTable);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        muData.setText("Datei");

        miSave.setText("Speichern");
        miSave.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                miSaveActionPerformed(evt);
            }
        });
        muData.add(miSave);

        miLoad.setText("Laden");
        miLoad.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                miLoadActionPerformed(evt);
            }
        });
        muData.add(miLoad);

        jMenuBar1.add(muData);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void miAddActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_miAddActionPerformed
    {//GEN-HEADEREND:event_miAddActionPerformed
        GeschwindigkeitsmessungDialog dlg = new GeschwindigkeitsmessungDialog(this, true);
        
        dlg.setVisible(true);
        
        if(dlg.isOkay())
        {
            bl.add(dlg.getMessung());
        }
    }//GEN-LAST:event_miAddActionPerformed

    private void miSaveActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_miSaveActionPerformed
    {//GEN-HEADEREND:event_miSaveActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.addChoosableFileFilter(new FileNameExtensionFilter(".ser", "ser"));
        int proof = chooser.showSaveDialog(null);
        
        if(proof == JFileChooser.APPROVE_OPTION)
        {
            try
            {
                bl.save(chooser.getSelectedFile());
            } catch (Exception ex)
            {
               
                
                Logger.getLogger(GeschwindigkeitsmessungGui.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_miSaveActionPerformed

    private void miDelActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_miDelActionPerformed
    {//GEN-HEADEREND:event_miDelActionPerformed
        int idx[] = taTable.getSelectedRows();
        
        for(int i = idx.length-1; i >= 0; i--)
        {
            bl.del(i);
        }
    }//GEN-LAST:event_miDelActionPerformed

    private void miLoadActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_miLoadActionPerformed
    {//GEN-HEADEREND:event_miLoadActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.addChoosableFileFilter(new FileNameExtensionFilter(".ser", "ser"));
        int proof = chooser.showOpenDialog(null);
        
        if(proof == JFileChooser.APPROVE_OPTION)
        {
            try
            {
                bl.load(chooser.getSelectedFile());
            } catch (Exception ex)
            {
                Logger.getLogger(GeschwindigkeitsmessungGui.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_miLoadActionPerformed

    private void miAvgActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_miAvgActionPerformed
    {//GEN-HEADEREND:event_miAvgActionPerformed
        JOptionPane.showMessageDialog(null, String.format("%.2f",bl.getAvgUeber()),"Durchschnittliche Überschreitung", 1);
    }//GEN-LAST:event_miAvgActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(GeschwindigkeitsmessungGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(GeschwindigkeitsmessungGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(GeschwindigkeitsmessungGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(GeschwindigkeitsmessungGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new GeschwindigkeitsmessungGui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem miAdd;
    private javax.swing.JMenuItem miAvg;
    private javax.swing.JMenuItem miDel;
    private javax.swing.JMenuItem miLoad;
    private javax.swing.JMenuItem miSave;
    private javax.swing.JMenu muData;
    private javax.swing.JTable taTable;
    // End of variables declaration//GEN-END:variables
}
