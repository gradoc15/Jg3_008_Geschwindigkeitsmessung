
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author User
 */
public class GeschwindigkeitsmessungDialog extends javax.swing.JDialog
{

    /**
     * Creates new form GeschwindigkeitsmessungDialog
     */
    public GeschwindigkeitsmessungDialog(java.awt.Frame parent, boolean modal)
    {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jLabel1 = new javax.swing.JLabel();
        tfDatum = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        tfUhrzeit = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        tfKennzeichen = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        tfGemessen = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        tfErlaubt = new javax.swing.JTextField();
        btAdd = new javax.swing.JButton();
        btCancle = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridLayout(6, 2));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Datum: ");
        getContentPane().add(jLabel1);
        getContentPane().add(tfDatum);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Uhrzeit: ");
        getContentPane().add(jLabel2);
        getContentPane().add(tfUhrzeit);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Kennzeichen_: ");
        getContentPane().add(jLabel3);
        getContentPane().add(tfKennzeichen);

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("V-Gemessen: ");
        getContentPane().add(jLabel4);
        getContentPane().add(tfGemessen);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("V-Erlaubt: ");
        getContentPane().add(jLabel5);
        getContentPane().add(tfErlaubt);

        btAdd.setText("Ãœbernehmen");
        btAdd.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btAddActionPerformed(evt);
            }
        });
        getContentPane().add(btAdd);

        btCancle.setText("Abbrechen");
        btCancle.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btCancleActionPerformed(evt);
            }
        });
        getContentPane().add(btCancle);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private boolean okay = false;
    private Messung m;
    private void btAddActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btAddActionPerformed
    {//GEN-HEADEREND:event_btAddActionPerformed
       DateTimeFormatter df = DateTimeFormatter.ofPattern("dd.MM.yyyy");
       DateTimeFormatter tf = DateTimeFormatter.ofPattern("HH:mm");
      //d.MM.yyyy h:m"
       
       try{
        m = new Messung(LocalDate.parse(tfDatum.getText(), df), LocalTime.parse(tfUhrzeit.getText()
                , tf), tfKennzeichen.getText(), Integer.parseInt(tfGemessen.getText()), Integer.parseInt(tfErlaubt.getText()));
        
        okay = true;
        this.dispose();
        
       }
       catch(Exception e)
       {
           e.printStackTrace();
           JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", 2);
       }
        
        
    }//GEN-LAST:event_btAddActionPerformed

    private void btCancleActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btCancleActionPerformed
    {//GEN-HEADEREND:event_btCancleActionPerformed
       this.dispose();
    }//GEN-LAST:event_btCancleActionPerformed

    public boolean isOkay()
    {
        return okay;
    }
    
    public Messung getMessung()
    {
        return m;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(GeschwindigkeitsmessungDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(GeschwindigkeitsmessungDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(GeschwindigkeitsmessungDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(GeschwindigkeitsmessungDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                GeschwindigkeitsmessungDialog dialog = new GeschwindigkeitsmessungDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter()
                {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e)
                    {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdd;
    private javax.swing.JButton btCancle;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField tfDatum;
    private javax.swing.JTextField tfErlaubt;
    private javax.swing.JTextField tfGemessen;
    private javax.swing.JTextField tfKennzeichen;
    private javax.swing.JTextField tfUhrzeit;
    // End of variables declaration//GEN-END:variables
}
